{"version":3,"file":"static/js/629.3394c602.chunk.js","mappings":"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","sources":["components/PhoneBook/PhoneBook.styled.jsx","components/ContactForm/ContactForm.styled.jsx","hooks/contactsHook.js","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.styled.jsx","components/Box/Box.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactLIst/ContactList.styled.jsx","components/ContactLIst/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Spinner/Spinner.jsx","components/PhoneBook/PhoneBook.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 90vw;\n  padding: ${p => p.theme.space[4]}px;\n  margin-top: ${p => p.theme.space[4]}px;\n  background: ${p => p.theme.colors.background};\n  border-radius: ${p => p.theme.radii.medium};\n  @media ${p => p.theme.media.tablet} {\n    width: 80vw;\n  }\n  @media ${p => p.theme.media.desktop} {\n    width: 768px;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-size: ${p => p.theme.fontSizes.l}px;\n  font-weight: ${p => p.theme.fontWeights.bold};\n  text-align: center;\n  margin-bottom: ${p => p.theme.space[4]}px;\n`;\n","import styled, { css } from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  padding: ${p => p.theme.space[4]}px;\n  margin-bottom: ${p => p.theme.space[4]}px;\n  background: ${p => p.theme.colors.darkGreen};\n  color: ${p => p.theme.colors.white};\n  border-radius: ${p => p.theme.radii.medium};\n`;\n\nexport const Label = styled.label`\n  margin-bottom: ${p => p.theme.space[3]}px;\n  width: 85%;\n`;\n\nexport const Input = styled.input.attrs(props => ({\n  type: props.type,\n}))`\n  width: 85%;\n  margin-bottom: ${p => p.theme.space[4]}px;\n  padding: 7px 5px;\n  font-size: ${p => p.theme.fontSizes.m}px;\n  background: ${p => p.theme.colors.primary};\n  outline: none;\n  &::placeholder {\n    color: ${p => p.theme.colors.secondary};\n  }\n`;\n\nexport const Button = styled.button.attrs({ type: 'submit' })`\n  width: 110px;\n  height: 35px;\n  background: linear-gradient(to right, #0a4918, #53725a);\n  color: ${p => p.theme.colors.white};\n  border: ${p => p.theme.borders.bold};\n  border-color: ${p => p.theme.colors.primary};\n  border-radius: ${p => p.theme.space[4]}px;\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    background: ${p => p.theme.colors.primary};\n    color: ${p => p.theme.colors.text};\n    box-shadow: 0px 0px 7px #fff;\n  }\n\n  ${p =>\n    p.disabled &&\n    css`\n      background: ${p => p.theme.colors.primary};\n    `}\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations, changeFilter } from 'redux/contacts';\n\n// contactsHook\nexport const useContacts = () => {\n  const contacts = useSelector(state => state.contacts.items);\n  const filter = useSelector(state => state.contacts.filter);\n  const loader = useSelector(state => state.contacts.loader);\n  const addLoader = useSelector(state => state.contacts.addLoader);\n  const error = useSelector(state => state.contacts.error);\n  const dispatch = useDispatch();\n\n  const getContacts = () => {\n    dispatch(contactsOperations.getContacts());\n  };\n\n  const addContact = data => {\n    dispatch(contactsOperations.addContact(data));\n  };\n\n  const deleteContact = id => {\n    dispatch(contactsOperations.deleteContact(id));\n  };\n  const editContact = ({ id, name, number }) => {\n    dispatch(contactsOperations.editContact({ id, name, number }));\n  };\n\n  const setFilter = value => {\n    dispatch(changeFilter(value));\n  };\n\n  return {\n    contacts,\n    filter,\n    loader,\n    addLoader,\n    error,\n    getContacts,\n    addContact,\n    deleteContact,\n    editContact,\n    setFilter,\n  };\n};\n","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport PropTypes from 'prop-types';\nimport { Form, Label, Input, Button } from './ContactForm.styled';\nimport { useContacts } from 'hooks';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const inputNameId = nanoid(12);\n  const inputNumberId = nanoid(12);\n  const { addLoader, addContact } = useContacts();\n\n  const inputChangeHandler = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    addContact({ name, number });\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={submitHandler} autoComplete=\"off\">\n      <Label htmlFor={inputNameId}>Name</Label>\n      <Input\n        id={inputNameId}\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onChange={inputChangeHandler}\n        placeholder=\"full name\"\n      />\n\n      <Label htmlFor={inputNumberId}>Number</Label>\n      <Input\n        id={inputNumberId}\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        onChange={inputChangeHandler}\n        placeholder=\"tellephone number xxx-xx-xx\"\n      />\n\n      <Button disabled={addLoader}>\n        {' '}\n        {addLoader ? 'Adding...' : 'Add contact'}\n      </Button>\n    </Form>\n  );\n};\n\nContactForm.propTypes = {\n  dispatch: PropTypes.func,\n};\n\nexport default ContactForm;\n","import styled, { css } from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: ${p => p.theme.space[4]}px;\n  font-weight: 500;\n  width: 100%;\n  &:not(:last-child) {\n    margin-bottom: ${p => p.theme.space[3]}px;\n  }\n`;\n\nexport const Button = styled.button.attrs({\n  type: 'button',\n})`\n  width: 75px;\n  height: 25px;\n  background: linear-gradient(to right, #0a4918, #53725a);\n  color: ${p => p.theme.colors.white};\n  border: 2px solid grey;\n  border-radius: ${p => p.theme.space[2]}px;\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    background: ${p => p.theme.colors.primary};\n    color: #13411d;\n    box-shadow: 0px 0px 7px #fff;\n  }\n\n  ${p =>\n    p.disabled &&\n    css`\n      background: ${p => p.theme.colors.primary};\n    `}\n`;\n","import styled from 'styled-components';\nimport {color, space, layout, flexbox, position} from 'styled-system';\n\nexport const Box = styled('div')(\n    color,\n    space,\n    layout,\n    flexbox,\n    position,\n);","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Item, Button } from './ContactListItem.styled';\nimport { useContacts } from 'hooks';\nimport { Box } from 'components/Box/Box';\n\nconst ContactListItem = ({ id, name, number }) => {\n  const [currentId, setCurrentId] = useState(null);\n  // const [editName, setEditName] = useState(name);\n  // const [editNumber, setEditNumber] = useState(number);\n  const [isEdited, setIsEdited] = useState(false);\n  const { loader, deleteContact } = useContacts();\n\n  return (\n    <Item>\n      {isEdited ? (\n        <div>input</div>\n      ) : (\n        <>\n          <span>{name}:</span>\n          <span>{number}</span>\n        </>\n      )}\n      <Box>\n        <Button\n          disabled={currentId}\n          onClick={() => {\n            setCurrentId(id);\n            setIsEdited(true);\n          }}\n        >\n          {loader && currentId ? 'Edit...' : 'Edit'}\n        </Button>\n        <Button\n          disabled={currentId}\n          onClick={() => {\n            deleteContact(id);\n            setCurrentId(id);\n          }}\n        >\n          {loader && currentId ? 'Deleting...' : 'Delete'}\n        </Button>\n      </Box>\n    </Item>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactListItem;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding: ${p => p.theme.space[4]}px;\n  background: ${p => p.theme.colors.primary};\n  border-radius: ${p => p.theme.radii.normal};\n`;\n","import PropTypes from 'prop-types';\nimport ContactListItem from 'components/ContactListItem';\nimport { List } from './ContactList.styled';\n\nconst ContactList = ({ contacts }) => {\n  return (\n    <List>\n      {contacts.map(({ id, name, number }) => (\n        <ContactListItem key={id} id={id} name={name} number={number} />\n      ))}\n    </List>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n};\n\nexport default ContactList;\n","import styled from \"styled-components\";\n\nexport const Label = styled.label`\n        display: block;\n        font-size: ${p => p.theme.fontSizes.m}px;\n        color: #14331B;\n        margin-bottom: ${p => p.theme.space[4]}px;\n`;\n\nexport const Input = styled.input.attrs({\n    type: 'text',\n})`\n    width: 200px;\n    padding: ${p => p.theme.space[2]}px;\n    margin-left: ${p => p.theme.space[4]}px;\n    font-size: ${p => p.theme.fontSizes.xs}px;\n    background: ${p => p.theme.colors.primary};\n    outline: none;\n    border: 2px solid #14331B;\n    border-radius: 5px;\n`;","import { Label, Input } from './Filter.styled';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ value, onChange }) => (\n  <Label>\n    Filter by name:\n    <Input name=\"filter\" value={value} onChange={onChange} />\n  </Label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport { ThreeCircles } from 'react-loader-spinner';\nimport { Box } from 'components/Box/Box';\n\nexport default (\n  <Box display=\"flex\" justifyContent=\"center\" mt={6}>\n    <ThreeCircles\n      color=\"red\"\n      outerCircleColor=\"blue\"\n      middleCircleColor=\"green\"\n      innerCircleColor=\"grey\"\n    />\n  </Box>\n);\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Container, Title } from './PhoneBook.styled';\nimport ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactLIst';\nimport Filter from 'components/Filter';\nimport { Box } from 'components/Box/Box';\nimport Spinner from 'components/Spinner/Spinner';\nimport { useContacts } from 'hooks';\nimport { contactsOperations } from 'redux/contacts';\n\nconst PhoneBook = () => {\n  const dispatch = useDispatch();\n  const { contacts, filter, setFilter } = useContacts();\n\n  useEffect(() => {\n    dispatch(contactsOperations.getContacts());\n  }, [dispatch]);\n\n  const handleFilterInput = event => {\n    const { value } = event.target;\n    setFilter(value);\n  };\n\n  const filterContacts = () => {\n    if (contacts.length !== 0 && typeof contacts !== 'string') {\n      const normalizedFilter = filter.toLowerCase();\n      return contacts.filter(({ name }) =>\n        name.toLowerCase().includes(normalizedFilter)\n      );\n    }\n    return [];\n  };\n\n  const filteredContacts = filterContacts();\n\n  return (\n    <Box display=\"flex\" justifyContent=\"center\">\n      <Container>\n        <Title>Phonebook</Title>\n        <ContactForm />\n\n        <Title>Contacts</Title>\n        <Box display=\"flex\" justifyContent=\"space-between\">\n          <Filter value={filter} onChange={handleFilterInput} />\n          <h3>Total contacts: {filteredContacts.length}</h3>\n        </Box>\n\n        {contacts.length === 0 ? (\n          Spinner\n        ) : (\n          <ContactList contacts={filteredContacts} />\n        )}\n      </Container>\n    </Box>\n  );\n};\n\nexport default PhoneBook;\n"],"names":["Container","styled","p","theme","space","colors","background","radii","medium","media","tablet","desktop","Title","fontSizes","l","fontWeights","bold","Form","darkGreen","white","Label","Input","props","type","m","primary","secondary","Button","borders","text","disabled","css","useContacts","contacts","useSelector","state","items","filter","loader","addLoader","error","dispatch","useDispatch","getContacts","contactsOperations","addContact","data","deleteContact","id","editContact","name","number","setFilter","value","changeFilter","useState","setName","setNumber","inputNameId","nanoid","inputNumberId","inputChangeHandler","event","target","resetForm","onSubmit","preventDefault","autoComplete","htmlFor","pattern","title","required","onChange","placeholder","Item","Box","color","layout","flexbox","position","currentId","setCurrentId","isEdited","setIsEdited","onClick","List","normal","map","xs","display","justifyContent","mt","outerCircleColor","middleCircleColor","innerCircleColor","useEffect","filteredContacts","length","normalizedFilter","toLowerCase","includes","filterContacts","Spinner"],"sourceRoot":""}