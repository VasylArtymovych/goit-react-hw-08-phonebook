{"version":3,"file":"static/js/206.47b06f2c.chunk.js","mappings":"gTAKaA,EAAW,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACzB,OACE,SAACC,EAAA,EAAD,CACEC,WAAW,SAACC,EAAA,EAAD,IACXC,KAAK,SACLC,QAAQ,YACRC,MAAM,YACNC,KAAK,SACLC,GAAI,CACF,UAAW,CACTC,gBAAiB,SACjBC,UAAW,IATjB,SAaGV,KAKMW,GAAYC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,mJASTE,GAAQF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,8SAKL,qBAAGI,MAAkBC,MAAM,MACrB,qBAAGD,MAAkBC,MAAM,MAClC,qBAAGD,MAAkBE,QAAQC,KAAK,cAC3B,qBAAGH,MAAkBI,MAAMC,UAIjC,qBAAGL,MAAkBM,OAAOC,SAQ5BC,GAAWZ,EAAAA,EAAAA,IAAO,MAAPA,CAAH,2GACV,qBAAGI,MAAkBM,OAAOG,UAEtB,qBAAGT,MAAkBC,MAAM,MACzB,qBAAGD,MAAkBC,MAAM,MAGjCS,GAAad,EAAAA,EAAAA,IAAO,KAAPA,CAAH,oEACR,qBAAGI,MAAkBW,UAAUC,K,mBC9C1CC,EAAcC,EAAAA,KAAaC,MAAM,CACnCC,MAAOF,EAAAA,KAAaE,QACpBC,SAAUH,EAAAA,GACA,uBACPI,IAAI,EAAG,qDACPC,SAAS,0BAGC,SAASC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAwBC,EAAAA,EAAAA,IAC5BC,EAAAA,GAAAA,0BAQF,OACE,8BACGF,GACC,SAACG,EAAA,EAAD,CAAKC,QAAQ,OAAOC,eAAe,SAASC,GAAG,QAA/C,SACGC,EAAAA,EAAAA,iBAGH,SAAC,KAAD,CACEC,cAAe,CAAEf,MAAO,GAAIC,SAAU,IACtCe,SAda,SAACC,EAAD,GAA2B,IAAjBC,EAAgB,EAAhBA,UAC7Bb,EAASc,EAAAA,GAAAA,MAAqBF,IAC9BC,KAaME,iBAAkBvB,EAHpB,UAKE,UAAClB,EAAD,YACE,4BACE,SAAC0C,EAAA,EAAD,CAAQ7C,GAAI,CAAE8C,EAAG,EAAGC,QAAS,kBAA7B,UACE,SAACC,EAAA,EAAD,OAEF,SAAC9B,EAAD,wBAEF,SAACZ,EAAD,CACEV,KAAK,QACLqD,KAAK,QACLC,YAAY,sBAEd,SAAC,KAAD,CAAcD,KAAK,QAAnB,SACG,SAAAE,GAAG,OAAI,SAACnC,EAAD,UAAWmC,QAErB,SAAC7C,EAAD,CACEV,KAAK,WACLqD,KAAK,WACLC,YAAY,cAEd,SAAC,KAAD,CAAcD,KAAK,WAAnB,SACG,SAAAE,GAAG,OAAI,SAACnC,EAAD,UAAWmC,QAErB,SAAC5D,EAAD","sources":["pages/LoginPage/LoginPage.styled.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import { Form, Field } from 'formik';\nimport { Button } from '@mui/material';\nimport VpnKeyIcon from '@mui/icons-material/VpnKey';\nimport styled from 'styled-components';\n\nexport const LoginBtn = ({ children }) => {\n  return (\n    <Button\n      startIcon={<VpnKeyIcon />}\n      type=\"submit\"\n      variant=\"contained\"\n      color=\"secondary\"\n      size=\"medium\"\n      sx={{\n        '&:hover': {\n          backgroundColor: 'accent',\n          boxShadow: 4,\n        },\n      }}\n    >\n      {children}\n    </Button>\n  );\n};\n\nexport const LoginForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 320px;\n  padding: 20px;\n  margin: 0 auto;\n`;\n\nexport const Input = styled(Field)`\n  position: relative;\n  width: 90%;\n  height: 35px;\n  font-size: 22px;\n  padding: ${({ theme }) => theme.space[2]}px;\n  margin-bottom: ${({ theme }) => theme.space[4]}px;\n  border: ${({ theme }) => theme.borders.bold('#560668')};\n  border-radius: ${({ theme }) => theme.radii.normal};\n  background: transparent;\n\n  &::placeholder {\n    color: ${({ theme }) => theme.colors.white};\n  }\n  &:hover,\n  &:focus {\n    width: 100%;\n  }\n`;\n\nexport const ErrorMsg = styled('div')`\n  color: ${({ theme }) => theme.colors.accent};\n  font-size: 12px;\n  margin-top: -${({ theme }) => theme.space[4]}px;\n  margin-bottom: ${({ theme }) => theme.space[4]}px;\n`;\n\nexport const AvatarText = styled('h3')`\n  font-size: ${({ theme }) => theme.fontSizes.l}px;\n  text-align: center;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport Avatar from '@mui/material/Avatar';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport { authOperations, authSelectors } from 'redux/auth';\nimport {\n  LoginBtn,\n  LoginForm,\n  Input,\n  ErrorMsg,\n  AvatarText,\n} from './LoginPage.styled';\nimport Spiner from 'components/Spinner';\nimport { Box } from 'components/Box/Box';\n\nlet loginSchema = yup.object().shape({\n  email: yup.string().email(),\n  password: yup\n    .string('Enter your password')\n    .min(6, 'Password should be of minimum 6 characters length')\n    .required('Password is required'),\n});\n\nexport default function LoginPage() {\n  const dispatch = useDispatch();\n  const isFetchingCurrentUser = useSelector(\n    authSelectors.getIsFetchingCurrentUser\n  );\n\n  const handleSubmit = (value, { resetForm }) => {\n    dispatch(authOperations.logIn(value));\n    resetForm();\n  };\n\n  return (\n    <>\n      {isFetchingCurrentUser ? (\n        <Box display=\"flex\" justifyContent=\"center\" mt=\"120px\">\n          {Spiner.customSpinner}\n        </Box>\n      ) : (\n        <Formik\n          initialValues={{ email: '', password: '' }}\n          onSubmit={handleSubmit}\n          validationSchema={loginSchema}\n        >\n          <LoginForm>\n            <div>\n              <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n                <LockOutlinedIcon />\n              </Avatar>\n              <AvatarText>LogIn</AvatarText>\n            </div>\n            <Input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Enter your email\"\n            ></Input>\n            <ErrorMessage name=\"email\">\n              {msg => <ErrorMsg>{msg}</ErrorMsg>}\n            </ErrorMessage>\n            <Input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"password\"\n            ></Input>\n            <ErrorMessage name=\"password\">\n              {msg => <ErrorMsg>{msg}</ErrorMsg>}\n            </ErrorMessage>\n            <LoginBtn>LogIn</LoginBtn>\n          </LoginForm>\n        </Formik>\n      )}\n    </>\n  );\n}\n"],"names":["LoginBtn","children","Button","startIcon","VpnKey","type","variant","color","size","sx","backgroundColor","boxShadow","LoginForm","styled","Form","Input","Field","theme","space","borders","bold","radii","normal","colors","white","ErrorMsg","accent","AvatarText","fontSizes","l","loginSchema","yup","shape","email","password","min","required","LoginPage","dispatch","useDispatch","isFetchingCurrentUser","useSelector","authSelectors","Box","display","justifyContent","mt","Spiner","initialValues","onSubmit","value","resetForm","authOperations","validationSchema","Avatar","m","bgcolor","LockOutlined","name","placeholder","msg"],"sourceRoot":""}